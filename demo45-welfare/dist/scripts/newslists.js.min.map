{"version":3,"sources":["newslists.js"],"names":["$","jQuery","support","cors","window","Base","site","that","this","type","getQueryString","res","getAjax","status","console","log","data","newsList","newsDatas","rightNewsList","newsRightDatas","htmlLeft","ele","str_thumb","str_title","str_guide","news_time","append","substr","match","alert","message","name","image","onload","RegExp","location","search","reg","onerror","src","r","context","url","datas","Image","dataType","success","fns","fnf","fail","postAjax","getInfos","init"],"mappings":"aAAAA,EAAE,WACEC,OAAOC,QAAQC,MAAO,EADZC,OAAAC,MACHH,CACHG,KAAAA,2BACJA,SAFOH,WAGHI,IAAMC,EAAAC,KADHC,EAAAF,EAAAG,eAEQ,QACPD,EAAA,GAAIF,EAAJ,EAAA,EACAA,EAAIE,QAAOF,wBAAX,GAAA,SAAAI,GAEAJ,GADAE,QAAOA,IAAAE,GACM,KAARC,EAALC,OAAa,CACTC,IAAQC,EAARJ,EAAAK,KAAAC,SAEQC,GADeP,EAAAK,KAAAG,cACfD,IACAE,GACAC,EAAAA,QAAJ,SAAAC,GACIJ,GAAAA,qEAEIG,EAAAA,OAFJH,+HAgB6BG,EAA7Bf,KAAAgB,EAAAC,WAhBAL,+KAmBHI,EAAAE,UAnBGN,yDAqBDI,EAAAG,UArBCP,2DAsBJI,EAAAI,UAtBIR,6IA0BAlB,EAAA,oBAAA2B,OAAAN,IAEJjB,EAAAA,oBAAuBwB,OAAUC,gCAKzCC,MAAAnB,EAAAoB,YAIArB,eAAY,SAAAsB,GACZC,IAAAA,EAAMC,IAANC,OAAe,QAAYH,EAAA,gBAAA,KACnBlB,EAAAA,OAAAsB,SAAYC,OAAZT,OAAA,GAAAC,MAAAS,GAEJL,EAAMM,GAKVvC,OAJawC,MAALC,IAJRC,EAAAD,EAAA,KAOJ7B,EAzDG0B,EAAA,OA0DQI,GAAA,IAAAA,GAAA,aAAAA,EAAA,GAAAA,GAEHC,QA9DLzC,WA+DKc,IAAAA,EAAM4B,IAHHC,MAIHC,EAAAA,OAAU,WACVC,QALGhC,IAAA,YAAPkB,EAAAM,QAAA,WA1DD/B,KAAAgC,IAAAjC,KAAAD,OAAAE,KAAAgC,MAqEK/B,QAvELP,SAuEKO,EAAAA,EADGuC,EAAAC,GAEHN,EAAAA,KAAAA,CACA3B,KAAM4B,MACNE,IAAAA,KAAUxC,KAJPqC,EAKHI,KAAAA,EACAG,SAAMD,OANVF,QAAAC,EApEDE,KAAAD,KA+ECE,SAjFDjD,SAiFKK,EAAAA,EAAJyC,EAAAC,GACA1C,EAAAA,KAAK6C,CACR3C,KAAA,OAjFLkC,IAAAnC,KAAAF,KAAAqC,EAmFA3B,KAAA4B,EAtFJE,SAAA,OA4EgBC,QAASC,EACTE,KAAMD,KAGdI,KA/EGnD,WAgFCY,QAAQC,IAAI,OACDP,KACN4C,cAGRC","file":"newslists.js","sourcesContent":["$(function () {\r\n    jQuery.support.cors = true;\r\n    let Base = window.Base || {};\r\n    Base = {\r\n        site: 'https://www.doubaner.top',\r\n        getInfos() {\r\n            let that = this;\r\n            let type = that.getQueryString('type');\r\n            type = type == 1 ? 8 : 9;\r\n            that.getAjax('/news/page/1/column/8', {}, function (res) {\r\n                console.log(res);\r\n                if (res.status == 200) {\r\n                    let newsDatas = res.data.newsList;\r\n                    let newsRightDatas = res.data.rightNewsList;\r\n                    let htmlLeft = '';\r\n                    if (newsDatas) {\r\n                        newsDatas.forEach(ele => {\r\n                            htmlLeft +=\r\n                                `<li>\r\n                                    <a href=\"./news.html?id=${ele.str_id}\">\r\n                                        <div class=\"img-infos\">\r\n                                            <img src=\"${that.site+ele.str_thumb}\" alt=\"\">\r\n                                        </div>\r\n                                        <div class=\"des-infos\">\r\n                                            <h3>${ele.str_title}</h3>\r\n                                            <p>${ele.str_guide}</p>\r\n                                            <span>${ele.news_time}</span>\r\n                                        </div>\r\n                                    </a>\r\n                                </li>`\r\n                        });\r\n                        $(\"#news-section>ul\").append(htmlLeft);\r\n                    } else {\r\n                        $(\"#news-section>ul\").append('<h1>Sorry,这里还什么都没有</h1>');\r\n                    }\r\n\r\n                } else {\r\n                    alert(res.message);\r\n                }\r\n            });\r\n        },\r\n        getQueryString: function (name) {\r\n            var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\r\n            var r = window.location.search.substr(1).match(reg); //获取url中\"?\"符后的字符串并正则匹配\r\n            var context = \"\";\r\n            if (r != null)\r\n                context = r[2];\r\n            reg = null;\r\n            r = null;\r\n            return context == null || context == \"\" || context == \"undefined\" ? \"\" : context;\r\n        },\r\n        imgLoad() {\r\n            let image = new Image();\r\n            image.onload = function () {\r\n                    console.log('success');\r\n                },\r\n                image.onerror = function () {\r\n                    this.src = that.site + +this.src;\r\n                }\r\n        },\r\n        getAjax(url, datas, fns, fnf) {\r\n            $.ajax({\r\n                type: \"GET\",\r\n                url: this.site + url,\r\n                data: datas,\r\n                dataType: 'JSON',\r\n                success: fns,\r\n                fail: fnf\r\n            });\r\n        },\r\n        postAjax(url, datas, fns, fnf) {\r\n            $.ajax({\r\n                type: \"POST\",\r\n                url: this.site + url,\r\n                data: datas,\r\n                dataType: 'json',\r\n                success: fns,\r\n                fail: fnf\r\n            });\r\n        },\r\n        init() {\r\n            console.log('111');\r\n            let that = this;\r\n            that.getInfos();\r\n        }\r\n    }\r\n    Base.init();\r\n});"]}